user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;
worker_rlimit_nofile 4096;     ## worker_connections * 2 file descriptors

events {
    worker_connections  2048;  ## Default: 1024
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$http_x_real_ip - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;
    gzip  on;

    server {
        listen 80;
        listen [::]:80;

        index index.php;

        root /app/public;

        server_tokens off;
        # Security Headers
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header Set-Cookie "Path=/; HttpOnly; Secure";
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options "SAMEORIGIN";
        add_header Referrer-Policy: no-referrer-when-downgrade;
        add_header Content-Security-Policy: "default-src 'self'; frame-src http: data:; media-src http: data:; connect-src http: data:; script-src 'self' 'unsafe-inline' 'unsafe-eval' http:; style-src 'unsafe-inline' http:; img-src http: data:; font-src http: data:";
        add_header Permissions-Policy "geolocation=(),midi=(),sync-xhr=(),microphone=(),camera=(),magnetometer=(),gyroscope=(),fullscreen=(self),payment=()";

        location / {
            # If the requested URI exists as a file serve as static file
            if (-f $request_filename) {
                break;
            }

            # Extract the instance directory from the URL
            set $instance_dir "";
            if ($uri ~ ^/([^/]+)) {
                 set $instance_dir $1;
            }

            # Check if the directory exists
            set $dir_check "";
            if (-d /app/instances/$instance_dir) {
                set $dir_check 1;
            }

            # Redirect if the directory does not exist
            if ($dir_check = "") {
                return 307 https://search.bvsalud.org/$1/$is_args$args;
                break;
            }

            # Rewrite the uri from /instance/index.php to /index.php/instance/
            rewrite ^ /index.php/$instance_dir/$is_args$args;
        }

        location /index.php {
            fastcgi_pass unix:/var/run/php-fpm.sock;
            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            include fastcgi_params;
            fastcgi_param PATH_INFO $fastcgi_path_info;

            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            fastcgi_param DOCUMENT_ROOT $realpath_root;

            fastcgi_buffers 16 16k;
            fastcgi_buffer_size 32k;

            internal;

            send_timeout 60;

            keepalive_timeout  30;
            client_body_timeout 30;
            client_max_body_size 100m;
        }

        location ~ /\.ht {
                deny all;
        }

        # return 404 for all other php files not matching the front controller
        # this prevents access to other php files you don't want to be accessible.
        location ~ \.php$ {
            return 404;
        }

        location = /favicon.ico {
            log_not_found off; access_log off;
        }
        location = /robots.txt {
            log_not_found off; access_log off; allow all;
        }

        location ~* \.(css|gif|ico|jpeg|jpg|js|png)$ {
            expires max;
            log_not_found off;
        }
    }

    #include /etc/nginx/conf.d/*.conf;

}
